{"ast":null,"code":"import _defineProperty from \"/Users/jeffreyyip/serai/react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/jeffreyyip/serai/react-app/src/component/ValidationApp.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport PhoneValidationService from '../service/PhoneValidationService';\nimport TextInput from './TextInput';\n\nclass ValidationApp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeHandler = event => {\n      const name = event.target.name;\n      const value = event.target.value;\n\n      const updatedControls = _objectSpread({}, this.state.formControls);\n\n      const updatedFormElement = _objectSpread({}, updatedControls[name]);\n\n      updatedFormElement.value = value;\n      updatedControls[name] = updatedFormElement;\n      this.setState({\n        formControls: updatedControls\n      });\n      console.log(\"name: \".concat(name, \", value: \").concat(value));\n    };\n\n    this.state = {\n      formControls: {\n        phone: {\n          value: '',\n          placeholder: 'input phone'\n        },\n        phoneHistory: {\n          value: '',\n          placeholder: 'phoneHistory',\n          options: [{\n            value: '',\n            displayValue: ''\n          }]\n        }\n      },\n      message: null\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n    const data = new FormData(event.target);\n    console.log(data.get('phone'));\n    const phoneValue = data.get('phone');\n    PhoneValidationService.validate(phoneValue).then(rtn => {\n      console.log(rtn);\n      this.setState(state => {\n        const history = state.phoneHistory.concat(phoneValue);\n        return {\n          phoneHistory: history,\n          message: rtn.data.message\n        };\n      });\n    });\n  }\n\n  render() {\n    console.log('render');\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"ValidationFormApp\"), this.state.message && React.createElement(\"div\", {\n      className: \"alert alert-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.state.message), React.createElement(TextInput, {\n      name: \"phone\",\n      value: this.state.formControls.phone.value,\n      onChange: this.changeHandler,\n      placeholder: this.state.formControls.phone.placeholder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ValidationApp;","map":{"version":3,"sources":["/Users/jeffreyyip/serai/react-app/src/component/ValidationApp.jsx"],"names":["React","Component","PhoneValidationService","TextInput","ValidationApp","constructor","props","changeHandler","event","name","target","value","updatedControls","state","formControls","updatedFormElement","setState","console","log","phone","placeholder","phoneHistory","options","displayValue","message","onSubmit","bind","preventDefault","data","FormData","get","phoneValue","validate","then","rtn","history","concat","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PhoneValidationService from '../service/PhoneValidationService';\nimport TextInput from './TextInput';\n\nclass ValidationApp extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            formControls: {\n                phone: {\n                    value: '',\n                    placeholder: 'input phone'\n                },\n                phoneHistory: {\n                    value: '',\n                    placeholder: 'phoneHistory',\n                    options: [\n                        { value: '', displayValue: ''}\n                    ]\n                }\n            },\n            message: null\n        }\n\n            \n        this.onSubmit = this.onSubmit.bind(this)\n    }\n\n    changeHandler = event => {\n        const name = event.target.name;\n        const value = event.target.value;\n\n        const updatedControls={\n            ...this.state.formControls\n        };\n        const updatedFormElement={\n            ...updatedControls[name]\n        };\n        updatedFormElement.value = value;\n\n        updatedControls[name] = updatedFormElement;\n\n        this.setState({\n            formControls: updatedControls\n        }\n\n        );\n\n        console.log(`name: ${name}, value: ${value}`);\n    }\n\n    onSubmit(event) {\n        event.preventDefault();\n        const data = new FormData(event.target);\n\n        console.log(data.get('phone'));\n        const phoneValue = data.get('phone');\n        \n\n        PhoneValidationService.validate(phoneValue)\n            .then( rtn =>  {\n                console.log(rtn)\n                this.setState( state => {\n                    const history = state.phoneHistory.concat(phoneValue);\n                    return {\n                        phoneHistory : history,\n                        message : rtn.data.message\n                    };\n                    })\n        \n                }\n            )\n    }\n\n\n    render() {\n        console.log('render')\n        return (\n            <div className=\"container\">\n                <h3>ValidationFormApp</h3>\n                {this.state.message && <div className=\"alert alert-success\">{this.state.message}</div>}\n                <TextInput name=\"phone\"\n                            value={this.state.formControls.phone.value}\n                            onChange={this.changeHandler}\n                            placeholder={this.state.formControls.phone.placeholder}\n                />\n            </div>\n        )\n    }\n}\n\nexport default ValidationApp\n"]},"metadata":{},"sourceType":"module"}