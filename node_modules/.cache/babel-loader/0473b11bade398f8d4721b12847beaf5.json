{"ast":null,"code":"import _defineProperty from \"/Users/jeffreyyip/serai/react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/jeffreyyip/serai/react-app/src/component/ValidationApp.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport PhoneValidationService from '../service/PhoneValidationService';\nimport TextInput from './TextInput';\nimport Select from './Select';\nimport Table from './Table';\n\nclass ValidationApp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeHandler = event => {\n      const name = event.target.name;\n      const value = event.target.value;\n\n      const updatedControls = _objectSpread({}, this.state.formControls);\n\n      const updatedFormElement = _objectSpread({}, updatedControls[name]);\n\n      updatedFormElement.value = value;\n      updatedControls[name] = updatedFormElement;\n\n      if (name === 'phoneHistory') {\n        console.log('phoneHistory Changed');\n        updatedControls['phone'].value = updatedControls['phoneHistory'].value;\n      }\n\n      this.setState({\n        formControls: updatedControls\n      });\n      console.log(\"name: \".concat(name, \", value: \").concat(value));\n    };\n\n    this.onSubmit = () => {\n      const phoneValue = this.state.formControls['phone'].value;\n      console.log(\"validate \".concat(phoneValue));\n\n      const updatedControls = _objectSpread({}, this.state.formControls);\n\n      const updatedFormElement = _objectSpread({}, updatedControls['phoneHistory']);\n\n      const updatedHistory = updatedFormElement.options.concat({\n        value: phoneValue,\n        displayValue: phoneValue\n      });\n      updatedFormElement.options = updatedHistory;\n      updatedControls['phoneHistory'] = updatedFormElement;\n      PhoneValidationService.validate(phoneValue).then(rtn => {\n        console.log(rtn);\n        const updatedResults = this.state.results.concat({\n          phone: phoneValue,\n          message: rtn.data.valid\n        });\n        this.setState({\n          formControls: updatedControls,\n          message: \"Response Status: \".concat(rtn.status, \", Data: \").concat(JSON.stringify(rtn.data), \"  \"),\n          results: updatedResults\n        });\n      }).catch(err => {\n        this.setState({\n          message: \"Error in validation : \".concat(err.message)\n        });\n        console.error(err);\n      });\n    };\n\n    this.state = {\n      formControls: {\n        phone: {\n          value: '',\n          placeholder: 'input phone'\n        },\n        phoneHistory: {\n          value: '',\n          options: [{\n            value: '',\n            displayValue: ''\n          }]\n        }\n      },\n      message: null,\n      results: []\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  render() {\n    console.log('render');\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Validation Application\"), this.state.message && React.createElement(\"div\", {\n      className: \"alert alert-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, this.state.message), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(TextInput, {\n      name: \"phone\",\n      value: this.state.formControls.phone.value,\n      onChange: this.changeHandler,\n      placeholder: this.state.formControls.phone.placeholder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      type: \"submit\",\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"validate\"), React.createElement(Select, {\n      name: \"phoneHistory\",\n      value: this.state.formControls.phoneHistory.value,\n      onChange: this.changeHandler,\n      options: this.state.formControls.phoneHistory.options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })), React.createElement(Table, {\n      results: this.state.results,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ValidationApp;","map":{"version":3,"sources":["/Users/jeffreyyip/serai/react-app/src/component/ValidationApp.jsx"],"names":["React","Component","PhoneValidationService","TextInput","Select","Table","ValidationApp","constructor","props","changeHandler","event","name","target","value","updatedControls","state","formControls","updatedFormElement","console","log","setState","onSubmit","phoneValue","updatedHistory","options","concat","displayValue","validate","then","rtn","updatedResults","results","phone","message","data","valid","status","JSON","stringify","catch","err","error","placeholder","phoneHistory","bind","render"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,sBAAP,MAAmC,mCAAnC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,aAAN,SAA4BL,SAA5B,CAAsC;AAClCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAwBnBC,aAxBmB,GAwBHC,KAAK,IAAI;AACrB,YAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaD,IAA1B;AACA,YAAME,KAAK,GAAGH,KAAK,CAACE,MAAN,CAAaC,KAA3B;;AAEA,YAAMC,eAAe,qBACd,KAAKC,KAAL,CAAWC,YADG,CAArB;;AAGA,YAAMC,kBAAkB,qBACjBH,eAAe,CAACH,IAAD,CADE,CAAxB;;AAGAM,MAAAA,kBAAkB,CAACJ,KAAnB,GAA2BA,KAA3B;AAEAC,MAAAA,eAAe,CAACH,IAAD,CAAf,GAAwBM,kBAAxB;;AAEA,UAAIN,IAAI,KAAK,cAAb,EAA4B;AACxBO,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AAEAL,QAAAA,eAAe,CAAC,OAAD,CAAf,CAAyBD,KAAzB,GAAiCC,eAAe,CAAC,cAAD,CAAf,CAAgCD,KAAjE;AAEH;;AAED,WAAKO,QAAL,CAAc;AACVJ,QAAAA,YAAY,EAAEF;AADJ,OAAd;AAQAI,MAAAA,OAAO,CAACC,GAAR,iBAAqBR,IAArB,sBAAqCE,KAArC;AACH,KAtDkB;;AAAA,SAyDnBQ,QAzDmB,GAyDR,MAAM;AAEb,YAAMC,UAAU,GAAG,KAAKP,KAAL,CAAWC,YAAX,CAAwB,OAAxB,EAAiCH,KAApD;AACAK,MAAAA,OAAO,CAACC,GAAR,oBAAwBG,UAAxB;;AAEA,YAAMR,eAAe,qBACd,KAAKC,KAAL,CAAWC,YADG,CAArB;;AAGA,YAAMC,kBAAkB,qBACjBH,eAAe,CAAC,cAAD,CADE,CAAxB;;AAIA,YAAMS,cAAc,GAAGN,kBAAkB,CAACO,OAAnB,CAA2BC,MAA3B,CAAkC;AAACZ,QAAAA,KAAK,EAAES,UAAR;AAAoBI,QAAAA,YAAY,EAAEJ;AAAlC,OAAlC,CAAvB;AACAL,MAAAA,kBAAkB,CAACO,OAAnB,GAA6BD,cAA7B;AAEAT,MAAAA,eAAe,CAAC,cAAD,CAAf,GAAkCG,kBAAlC;AAGAf,MAAAA,sBAAsB,CAACyB,QAAvB,CAAgCL,UAAhC,EACKM,IADL,CACWC,GAAG,IAAK;AACPX,QAAAA,OAAO,CAACC,GAAR,CAAYU,GAAZ;AACA,cAAMC,cAAc,GAAG,KAAKf,KAAL,CAAWgB,OAAX,CAAmBN,MAAnB,CAA0B;AAACO,UAAAA,KAAK,EAAEV,UAAR;AAAoBW,UAAAA,OAAO,EAAEJ,GAAG,CAACK,IAAJ,CAASC;AAAtC,SAA1B,CAAvB;AAEA,aAAKf,QAAL,CAAc;AACVJ,UAAAA,YAAY,EAAGF,eADL;AAEVmB,UAAAA,OAAO,6BAAuBJ,GAAG,CAACO,MAA3B,qBAA4CC,IAAI,CAACC,SAAL,CAAeT,GAAG,CAACK,IAAnB,CAA5C,OAFG;AAGVH,UAAAA,OAAO,EAAED;AAHC,SAAd;AAKH,OAVT,EAYKS,KAZL,CAYYC,GAAG,IAAI;AACX,aAAKpB,QAAL,CAAc;AACVa,UAAAA,OAAO,kCAA4BO,GAAG,CAACP,OAAhC;AADG,SAAd;AAGAf,QAAAA,OAAO,CAACuB,KAAR,CAAeD,GAAf;AACH,OAjBL;AAoBH,KA/FkB;;AAGf,SAAKzB,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE;AACVgB,QAAAA,KAAK,EAAE;AACHnB,UAAAA,KAAK,EAAE,EADJ;AAEH6B,UAAAA,WAAW,EAAE;AAFV,SADG;AAKVC,QAAAA,YAAY,EAAE;AACV9B,UAAAA,KAAK,EAAE,EADG;AAEVW,UAAAA,OAAO,EAAE,CACL;AAAEX,YAAAA,KAAK,EAAE,EAAT;AAAaa,YAAAA,YAAY,EAAE;AAA3B,WADK;AAFC;AALJ,OADL;AAaTO,MAAAA,OAAO,EAAE,IAbA;AAcTF,MAAAA,OAAO,EAAE;AAdA,KAAb;AAkBA,SAAKV,QAAL,GAAgB,KAAKA,QAAL,CAAcuB,IAAd,CAAmB,IAAnB,CAAhB;AACH;;AA4EDC,EAAAA,MAAM,GAAG;AACL3B,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,EAEK,KAAKJ,KAAL,CAAWkB,OAAX,IAAsB;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsC,KAAKlB,KAAL,CAAWkB,OAAjD,CAF3B,EAGI;AAAU,MAAA,SAAS,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,OAAhB;AACY,MAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWC,YAAX,CAAwBgB,KAAxB,CAA8BnB,KADjD;AAEY,MAAA,QAAQ,EAAE,KAAKJ,aAF3B;AAGY,MAAA,WAAW,EAAE,KAAKM,KAAL,CAAWC,YAAX,CAAwBgB,KAAxB,CAA8BU,WAHvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAMA;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,IAAI,EAAC,QAAzC;AAAkD,MAAA,OAAO,EAAE,KAAKrB,QAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANA,EAQA,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,cAAb;AACY,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWC,YAAX,CAAwB2B,YAAxB,CAAqC9B,KADxD;AAEY,MAAA,QAAQ,EAAE,KAAKJ,aAF3B;AAGY,MAAA,OAAO,EAAE,KAAKM,KAAL,CAAWC,YAAX,CAAwB2B,YAAxB,CAAqCnB,OAH1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARA,CAHJ,EAkBI,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAE,KAAKT,KAAL,CAAWgB,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBJ,CADJ;AAwBH;;AA7HiC;;AAgItC,eAAezB,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport PhoneValidationService from '../service/PhoneValidationService';\nimport TextInput from './TextInput';\nimport Select from './Select';\nimport Table from './Table';\n\nclass ValidationApp extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            formControls: {\n                phone: {\n                    value: '',\n                    placeholder: 'input phone'\n                },\n                phoneHistory: {\n                    value: '',\n                    options: [\n                        { value: '', displayValue: ''}\n                    ]\n                }\n            },\n            message: null,\n            results: []\n        }\n\n            \n        this.onSubmit = this.onSubmit.bind(this)\n    }\n\n    changeHandler = event => {\n        const name = event.target.name;\n        const value = event.target.value;\n\n        const updatedControls={\n            ...this.state.formControls\n        };\n        const updatedFormElement={\n            ...updatedControls[name]\n        };\n        updatedFormElement.value = value;\n\n        updatedControls[name] = updatedFormElement;\n\n        if (name === 'phoneHistory'){\n            console.log('phoneHistory Changed')\n\n            updatedControls['phone'].value = updatedControls['phoneHistory'].value;\n\n        }\n\n        this.setState({\n            formControls: updatedControls\n        }\n\n\n\n        );\n\n        console.log(`name: ${name}, value: ${value}`);\n    }\n\n\n    onSubmit = () => {\n\n        const phoneValue = this.state.formControls['phone'].value;\n        console.log(`validate ${phoneValue}`);\n\n        const updatedControls={\n            ...this.state.formControls\n        };\n        const updatedFormElement={\n            ...updatedControls['phoneHistory']\n        };\n\n        const updatedHistory = updatedFormElement.options.concat({value: phoneValue, displayValue: phoneValue });\n        updatedFormElement.options = updatedHistory;\n\n        updatedControls['phoneHistory'] = updatedFormElement;\n\n\n        PhoneValidationService.validate(phoneValue)\n            .then( rtn =>  {\n                    console.log(rtn);\n                    const updatedResults = this.state.results.concat({phone: phoneValue, message: rtn.data.valid});\n\n                    this.setState({\n                        formControls : updatedControls,\n                        message : `Response Status: ${rtn.status}, Data: ${JSON.stringify(rtn.data)}  `,\n                        results: updatedResults\n                    });\n                }\n            )\n            .catch( err => {\n                this.setState({\n                    message : `Error in validation : ${err.message}`\n                });\n                console.error( err );\n            })\n\n \n    };\n\n\n    render() {\n        console.log('render')\n        return (\n            <div className=\"container\">\n                <h3>Validation Application</h3>\n                {this.state.message && <div className=\"alert alert-success\">{this.state.message}</div>}\n                <fieldset className=\"form-group\">\n                <TextInput name=\"phone\"\n                            value={this.state.formControls.phone.value}\n                            onChange={this.changeHandler}\n                            placeholder={this.state.formControls.phone.placeholder}\n                />\n                <button className=\"btn btn-success\" type=\"submit\" onClick={this.onSubmit}>validate</button>\n\n                <Select name=\"phoneHistory\"\n                            value={this.state.formControls.phoneHistory.value}\n                            onChange={this.changeHandler}\n                            options={this.state.formControls.phoneHistory.options}\n                />\n                </fieldset>\n\n                <Table results={this.state.results} />\n\n\n            </div>\n        )\n    }\n}\n\nexport default ValidationApp\n"]},"metadata":{},"sourceType":"module"}